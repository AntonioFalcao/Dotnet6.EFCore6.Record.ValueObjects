// <auto-generated />
using System;
using Dotnet6.EFCore6.Record.ValueObject.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dotnet6.EFCore6.Record.ValueObject.Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210616211836_First migration")]
    partial class Firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CS_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dotnet6.EFCore6.Record.ValueObject.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fb17362-5582-4784-a474-55f8674dcebb"),
                            Age = 31,
                            Name = "Mozelle"
                        },
                        new
                        {
                            Id = new Guid("7d6bfebd-7f3c-477a-930d-f384dbdb178c"),
                            Age = 51,
                            Name = "Hipolito"
                        },
                        new
                        {
                            Id = new Guid("99836a44-c19e-4121-b7a0-1df1335b25e5"),
                            Age = 48,
                            Name = "Filiberto"
                        },
                        new
                        {
                            Id = new Guid("1e7e2bc7-8394-4892-bd26-0996974efe6f"),
                            Age = 58,
                            Name = "Carlee"
                        },
                        new
                        {
                            Id = new Guid("4dc3c3ca-d991-4466-a423-982d2eecbe61"),
                            Age = 52,
                            Name = "Lindsay"
                        },
                        new
                        {
                            Id = new Guid("1c6eaa44-e44a-4396-a61d-465be5b3b807"),
                            Age = 65,
                            Name = "Shana"
                        },
                        new
                        {
                            Id = new Guid("4e6ef913-24c0-4af6-b7d5-9b20b2e2f2e1"),
                            Age = 79,
                            Name = "Madisen"
                        },
                        new
                        {
                            Id = new Guid("c08070ab-566f-42bd-a32d-dcf19b4f0ec1"),
                            Age = 22,
                            Name = "Danielle"
                        },
                        new
                        {
                            Id = new Guid("47cb5470-ad76-4193-91d2-89a8379ca482"),
                            Age = 34,
                            Name = "Kelton"
                        },
                        new
                        {
                            Id = new Guid("362f9e3a-164c-4e75-a401-0bb90371f73e"),
                            Age = 66,
                            Name = "Emelia"
                        });
                });

            modelBuilder.Entity("Dotnet6.EFCore6.Record.ValueObject.Domain.Entities.Person", b =>
                {
                    b.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(32)
                                .IsUnicode(false)
                                .HasColumnType("varchar(32)");

                            b1.HasKey("Id");

                            b1.HasIndex("PersonId")
                                .IsUnique();

                            b1.ToTable("Addresses");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.Street", "Street", b2 =>
                                {
                                    b2.Property<Guid>("AddressId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(128)
                                        .IsUnicode(false)
                                        .HasColumnType("varchar(128)");

                                    b2.Property<int>("Number")
                                        .HasColumnType("int");

                                    b2.HasKey("AddressId");

                                    b2.ToTable("Addresses");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressId");

                                    b2.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.City", "City", b3 =>
                                        {
                                            b3.Property<Guid>("StreetAddressId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(false)
                                                .HasColumnType("varchar(128)");

                                            b3.HasKey("StreetAddressId");

                                            b3.ToTable("Addresses");

                                            b3.WithOwner()
                                                .HasForeignKey("StreetAddressId");

                                            b3.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.State", "State", b4 =>
                                                {
                                                    b4.Property<Guid>("CityStreetAddressId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<string>("Initials")
                                                        .IsRequired()
                                                        .HasMaxLength(8)
                                                        .IsUnicode(false)
                                                        .HasColumnType("varchar(8)");

                                                    b4.Property<string>("Name")
                                                        .IsRequired()
                                                        .HasMaxLength(128)
                                                        .IsUnicode(false)
                                                        .HasColumnType("varchar(128)");

                                                    b4.HasKey("CityStreetAddressId");

                                                    b4.ToTable("Addresses");

                                                    b4.WithOwner()
                                                        .HasForeignKey("CityStreetAddressId");

                                                    b4.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.Country", "Country", b5 =>
                                                        {
                                                            b5.Property<Guid>("StateCityStreetAddressId")
                                                                .HasColumnType("uniqueidentifier");

                                                            b5.Property<string>("Initials")
                                                                .IsRequired()
                                                                .HasMaxLength(8)
                                                                .IsUnicode(false)
                                                                .HasColumnType("varchar(8)");

                                                            b5.Property<string>("Name")
                                                                .IsRequired()
                                                                .HasMaxLength(128)
                                                                .IsUnicode(false)
                                                                .HasColumnType("varchar(128)");

                                                            b5.HasKey("StateCityStreetAddressId");

                                                            b5.ToTable("Addresses");

                                                            b5.WithOwner()
                                                                .HasForeignKey("StateCityStreetAddressId");
                                                        });

                                                    b4.Navigation("Country");
                                                });

                                            b3.Navigation("State");
                                        });

                                    b2.Navigation("City");
                                });

                            b1.Navigation("Street");
                        });

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
