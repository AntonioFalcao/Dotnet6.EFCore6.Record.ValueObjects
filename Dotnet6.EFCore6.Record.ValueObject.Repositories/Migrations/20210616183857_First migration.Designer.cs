// <auto-generated />
using System;
using Dotnet6.EFCore6.Record.ValueObject.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dotnet6.EFCore6.Record.ValueObject.Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210616183857_First migration")]
    partial class Firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CS_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dotnet6.EFCore6.Record.ValueObject.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00958d32-8a83-45c8-8300-9d1b8ea05afc"),
                            Age = 76,
                            Name = "Avery"
                        },
                        new
                        {
                            Id = new Guid("4f35bfdd-d49b-442d-971f-fdd0cf2e86ee"),
                            Age = 60,
                            Name = "Vida"
                        },
                        new
                        {
                            Id = new Guid("4a8b006c-2e55-4339-9a02-3bd38f3a9571"),
                            Age = 23,
                            Name = "Toby"
                        },
                        new
                        {
                            Id = new Guid("f3dfb700-c4ae-4239-a1d6-ffe8f2c2c47e"),
                            Age = 43,
                            Name = "Lilly"
                        },
                        new
                        {
                            Id = new Guid("835042ea-1bdc-439a-90f0-36f871b1890a"),
                            Age = 37,
                            Name = "Madisen"
                        },
                        new
                        {
                            Id = new Guid("6e017e62-a84a-4c42-bb6b-af6ceaa3603c"),
                            Age = 34,
                            Name = "Jane"
                        },
                        new
                        {
                            Id = new Guid("c2822b57-94bb-4c65-a85f-19508df6ade0"),
                            Age = 18,
                            Name = "Corrine"
                        },
                        new
                        {
                            Id = new Guid("21adaba7-0925-4b02-973b-40004d0b8958"),
                            Age = 69,
                            Name = "Margarette"
                        },
                        new
                        {
                            Id = new Guid("04226e8f-acf0-4eeb-b4d1-e53f4ee8063a"),
                            Age = 62,
                            Name = "German"
                        },
                        new
                        {
                            Id = new Guid("2d129e75-f6f4-4385-ba7e-077aeeb0cbb2"),
                            Age = 43,
                            Name = "Mortimer"
                        });
                });

            modelBuilder.Entity("Dotnet6.EFCore6.Record.ValueObject.Domain.Entities.Person", b =>
                {
                    b.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("PersonId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("PersonId")
                                .IsUnique();

                            b1.ToTable("Addresses");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.Street", "Street", b2 =>
                                {
                                    b2.Property<Guid>("AddressId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(128)
                                        .IsUnicode(false)
                                        .HasColumnType("varchar(128)");

                                    b2.Property<int>("Number")
                                        .HasColumnType("int");

                                    b2.HasKey("AddressId");

                                    b2.ToTable("Addresses");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressId");

                                    b2.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.City", "City", b3 =>
                                        {
                                            b3.Property<Guid>("StreetAddressId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<string>("Name")
                                                .IsRequired()
                                                .HasMaxLength(128)
                                                .IsUnicode(false)
                                                .HasColumnType("varchar(128)");

                                            b3.HasKey("StreetAddressId");

                                            b3.ToTable("Addresses");

                                            b3.WithOwner()
                                                .HasForeignKey("StreetAddressId");

                                            b3.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.State", "State", b4 =>
                                                {
                                                    b4.Property<Guid>("CityStreetAddressId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<string>("Initials")
                                                        .IsRequired()
                                                        .HasMaxLength(10)
                                                        .IsUnicode(false)
                                                        .HasColumnType("varchar(10)");

                                                    b4.Property<string>("Name")
                                                        .IsRequired()
                                                        .HasMaxLength(128)
                                                        .IsUnicode(false)
                                                        .HasColumnType("varchar(128)");

                                                    b4.HasKey("CityStreetAddressId");

                                                    b4.ToTable("Addresses");

                                                    b4.WithOwner()
                                                        .HasForeignKey("CityStreetAddressId");

                                                    b4.OwnsOne("Dotnet6.EFCore6.Record.ValueObject.Domain.ValueObjects.Country", "Country", b5 =>
                                                        {
                                                            b5.Property<Guid>("StateCityStreetAddressId")
                                                                .HasColumnType("uniqueidentifier");

                                                            b5.Property<string>("Initials")
                                                                .IsRequired()
                                                                .HasMaxLength(10)
                                                                .IsUnicode(false)
                                                                .HasColumnType("varchar(10)");

                                                            b5.Property<string>("Name")
                                                                .IsRequired()
                                                                .HasMaxLength(128)
                                                                .IsUnicode(false)
                                                                .HasColumnType("varchar(128)");

                                                            b5.HasKey("StateCityStreetAddressId");

                                                            b5.ToTable("Addresses");

                                                            b5.WithOwner()
                                                                .HasForeignKey("StateCityStreetAddressId");
                                                        });

                                                    b4.Navigation("Country");
                                                });

                                            b3.Navigation("State");
                                        });

                                    b2.Navigation("City");
                                });

                            b1.Navigation("Street");
                        });

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
